#!/usr/bin/python

"""
iOS (Build = iPhone) only Script to Helpshift SDK to a XCode project.
This script should be called with only the
absolute path of the output directory for the iOS build

sys.argv[0] : name of the python script
sys.argv[1] : path of the Unity iPhone project
sys.argv[2] : type of build target
"""

import os, sys
from mod_pbxproj import XcodeProject
import shutil

if sys.argv[2] != 'iPhone' and sys.argv[2] != 'iOS' :
    sys.exit(1)

XCODE_PROJECT_PATH = sys.argv[1] + '/Unity-iPhone.xcodeproj'
HELPSHIFT_SDK_PATH = os.path.dirname(os.path.realpath(__file__)) + '/../Plugins/iOS/'

print("Start adding Helpshift-iOS SDK");

print("XCODE_PROJECT_PATH - " + XCODE_PROJECT_PATH)
print("HELPSHIFT_SDK_PATH - " + HELPSHIFT_SDK_PATH)

project = XcodeProject.Load(XCODE_PROJECT_PATH +'/project.pbxproj')

print('Step 1: Adding Dependency Libraries')
shutil.copy2(HELPSHIFT_SDK_PATH + '/libHelpshift.a', XCODE_PROJECT_PATH + '/../Libraries')
framework_group = project.get_or_create_group('Frameworks')
project.add_file_if_doesnt_exist('System/Library/Frameworks/CoreGraphics.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/CoreTelephony.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/CoreText.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/MobileCoreServices.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/Security.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/QuartzCore.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/SystemConfiguration.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/Foundation.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/UIKit.framework', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('System/Library/Frameworks/QuickLook.framework', tree='SDKROOT', parent=framework_group)

project.add_file_if_doesnt_exist('usr/lib/libsqlite3.dylib', tree='SDKROOT', parent=framework_group)
project.add_file_if_doesnt_exist('usr/lib/libz.dylib', tree='SDKROOT', parent=framework_group)

print('Step 2: Adding HelpshiftSDK to XCodeProject')
remove_group = project.get_groups_by_name('HelpshiftSDK')
if remove_group and remove_group.count > 0:
    project.remove_file(remove_group[0])
hs_group = project.get_or_create_group('HelpshiftSDK')
project.add_file(XCODE_PROJECT_PATH + '/../Libraries/libHelpshift.a', parent=hs_group)
project.add_file(HELPSHIFT_SDK_PATH + '/Helpshift.h', parent=hs_group)
# unity specific header file
project.add_file(HELPSHIFT_SDK_PATH + '/Helpshift-Unity.h', parent=hs_group)
project.add_folder(HELPSHIFT_SDK_PATH + "/HSResources", excludes=["^(.*\.DS_Store)|(.*.meta)$"], parent=hs_group)

project.add_other_ldflags('-ObjC')

hs_lc_group = project.get_or_create_group('HSLocalization', parent=hs_group)
hs_lc_var_group = project.get_or_create_variant_group('HelpshiftLocalizable.strings', parent=hs_lc_group)
for root, folder, files in os.walk(HELPSHIFT_SDK_PATH + "/HSLocalization"):
    if 'HelpshiftLocalizable.strings' in files:
        project.add_file(os.path.join(root, 'HelpshiftLocalizable.strings'), parent=hs_lc_var_group, ignore_unknown_type=True)

project.add_folder(HELPSHIFT_SDK_PATH + "/HSThemes", excludes=["^(.*\.DS_Store)|(.*.meta)$"], parent=hs_group)

# config json files
project.add_file(HELPSHIFT_SDK_PATH + '/HelpshiftApiConfig.json', parent=hs_group)
project.add_file(HELPSHIFT_SDK_PATH + '/HelpshiftInstallConfig.json', parent=hs_group)

if project.modified:
    project.backup() # take project.pbxproj backup,
    project.save()   # save modified pbxproj after adding helpshift sdk

print("Finished adding Helpshift-iOS SDK");
